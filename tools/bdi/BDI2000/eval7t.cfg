; bdiGDB configuration file for Evaluator-7T board
; ------------------------------------------------
;
[INIT]
WM32    0x03FF0000  0x07FFFFA0	;SYSCFG: no cache,SRAM=0x03FE0000,SFR=0x03FF0000
WM32    0x03FF3010  0x0000003E  ;EXTDBWTH: DSR0=16, DSR1/2=32
WM32    0x03FF3014  0x18860030  ;ROMCON0: Flash, 0x01800000-0x0187FFFF, 4 wait
WM32    0x03FF3018  0x00400010  ;ROMCON1: SRAM, 0x00000000-0x0003FFFF, 2 wait
WM32    0x03FF301C  0x00801010  ;ROMCON2: SRAM, 0x00040000-0x0007FFFF, 2 wait
WM32    0x03FF303C  0x00008360  ;REFEXTCON: Ext.I/O @ 0x03600000
;
WGPR    11          0x00000020  ;set frame pointer to free RAM
WM32    0x00000020  0x00000028	;dummy stack frame
;
RM32    0x00000000              ;read 32bit
RM16    0x00000000              ;read 16bit
RM8     0x00000000              ;read  8bit
;
;WBIN    0x00001000  E:\cygwin\home\bdidemo\arm\eval7t.cfg
;


[TARGET]
CPUTYPE     ARM7TDMI
CLOCK       1                   ;JTAG clock (0=Adaptive, 1=8MHz, 2=4MHz, 3=2MHz)
ENDIAN      LITTLE              ;memory model (LITTLE | BIG)
VECTOR      CATCH               ;catch unhandled exceptions
BDIMODE     AGENT               ;the BDI working mode (LOADONLY | AGENT)
BREAKMODE   SOFT 0xDFFFDFFF     ;SOFT or HARD, ARM / Thumb break code
;BREAKMODE   HARD                ;SOFT or HARD, ARM / Thumb break code
DCC         7                   ;DCC I/O via TCP port 7
;SIO         7 9600              ;TCP port for serial IO

[HOST]
IP          151.120.25.119
;FILE        E:\cygwin\home\bdidemo\arm\vxworks
;FORMAT      COFF
FILE        E:\cygwin\home\demo\pid7t\fibo.x
FORMAT      ELF
LOAD        MANUAL    ;load VxWorks code MANUAL or AUTO after reset

[FLASH]
WORKSPACE   0x00000000  ;workspace in target RAM for fast programming algorithm
CHIPTYPE    AT49X16     ;Flash type is SST39VF400
CHIPSIZE    0x80000     ;The size of one flash chip in bytes (e.g. AM29F010 = 0x20000)
BUSWIDTH    16          ;The width of the flash memory bus in bits (8 | 16 | 32)
FILE        E:\cygwin\home\bdidemo\arm\test0.elf  ;The file to program
FORMAT      BIN 0x01840000
ERASE       0x01840000 BLOCK  ;erase a 64kB block
ERASE       0x01850000 BLOCK  ;erase a 64kB block
ERASE       0x01860000 BLOCK  ;erase a 64kB block
ERASE       0x01870000 BLOCK  ;erase a 64kB block

